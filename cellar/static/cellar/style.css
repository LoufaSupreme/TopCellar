/* ------------------------------------------ */
/* CUSTOM PROPERTIES ---------------------------- */
/* ------------------------------------------ */

:root {
  /* color parameters */
  --clr-dark: 214 7% 19%;
  --clr-light: 32 100% 53%;
  --clr-white: 0 0% 100%;

  /* font sizes */
  --fs-900: clamp(5rem, 7vw + 1rem, 9.375rem);
  --fs-800: 6.25rem;
  --fs-700: 3.5rem;
  --fs-600: 2rem;
  --fs-500: 1.75rem;
  --fs-400: 1.125rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* font-families */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;
}

@media (min-width: 35em) {
  /* MOBILE.  35em = 560px.  use em instead of rem b/c safari can have issues with rem */
  :root {
    --fs-800: 5rem;
    --fs-700: 2.5rem;
    --fs-600: 1.5rem;
    --fs-400: 1rem;
  }
}

@media (min-width: 45em) {
  /* Tablets.  Use em instead of rem b/c safari can have issues with rem */
  :root {
    --fs-800: 6.25rem;
    --fs-700: 3.5rem;
    --fs-600: 2rem;
    --fs-400: 1.125rem;
  }
}

/* ------------------------------------------ */
/* UTILITY CLASSES ---------------------------- */
/* ------------------------------------------ */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  /* display block elements will not allow anything else to overflow onto their line */
  display: block;
}

.flow > *:where(:not(:first-child)) {
  /* select anything with a sibling before it */
  margin-top: var(--flow-space,1rem); /* default to 1rem if --flow-space is not set */
  /* outline: 1px solid red; */
}

.container {
  padding: 0.5rem;
  margin: 0.5rem auto;
  max-width: 80rem;
}

.grid-container {
  display: grid;
  text-align: center;
  place-items: center;
  padding: 0 1rem;
}

.grid-container * {
  max-width: 50ch;
}

@media (min-width: 45em) {
  .grid-container {
    grid-template-columns: minmax(1rem, 1fr) minmax(0, 40rem) minmax(0, 40rem) minmax(1rem,1fr);
    column-gap: var(--container-gap, 2rem);
    text-align: left;
  }

  .grid-container > *:first-child {
    grid-column: 2;
  }

  .grid-container > *:last-child {
    grid-column: 3;
  }

  .grid-container--home {
    padding-bottom: max(6rem, 20vh);
    align-items: end;
  }
}

/* screen reader only */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

/* colors */
.bg-dark {
  background-color: hsl(var(--clr-dark));
}
.bg-accent {
  background-color: hsl(var(--clr-light));
}
.bg-white {
  background-color: hsl(var(--clr-white));
}

.text-dark {
  color: hsl(var(--clr-dark));
}
.text-accent {
  color: hsl(var(--clr-light));
}
.text-white {
  color: hsl(var(--clr-white));
}

/* typography */
.ff-serif {
  font-family: var(--ff-serif);
}
.ff-sans-cond {
  font-family: var(--ff-sans-cond);
}
.ff-sans-normal {
  font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}
.letter-spacing-2 {
  letter-spacing: 2.7px;
}
.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}
.fs-800 {
  font-size: var(--fs-800);
}
.fs-700 {
  font-size: var(--fs-700);
}
.fs-600 {
  font-size: var(--fs-600);
}
.fs-500 {
  font-size: var(--fs-500);
}
.fs-400 {
  font-size: var(--fs-400);
}
.fs-300 {
  font-size: var(--fs-300);
}
.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.neupho {
  box-shadow:  6px 6px 12px rgba(0, 0, 0, 0.4),
              -2px -2px 12px rgba(255,255,255,0.1);
}

.inset {
    box-shadow: inset 4px 4px 10px rgba(0, 0, 0, 0.4),
                inset -4px -4px 10px rgba(255,255,255,0.1);
}

/* ------------------------------------------ */
/* COMPONENTS --------------------------------- */
/* ------------------------------------------ */

/* NAVBAR //////////////*/

.navbar {
  justify-content: space-between;
  padding: 1rem;
}

.nav-content {
  flex-direction: column;
  --gap: 0;
}

.navbar-nav {
  --gap: 1rem;
}

.login-status {
  margin-left: auto;
}

/* PAGE HEADER  //////////////////*/

.welcome {
  padding-left: 1rem;
}

/* SEARCHBAR AREA ///////////////*/

.search-container {
  margin: 1rem 4rem 0 4rem;
  padding: 0.3rem 1.2rem;
  border-radius: 20px;
}

#search {
  width: 100%;
}

/* number of search results when typing in search box */
.search-count {
  display: none;
  margin: 0.2rem 0 0.5rem 5.5rem;
}

#entries-container {
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.toolbar-container {
  justify-content: center;
  align-items: center;
}

.toolbar {
  justify-content: center;
  align-items: center;
}

#toolbar-filter-btn {
  width: 120px;
  height: 45px;
  margin-right: -3rem;
  z-index: 2;
  border-radius: 20px;
}

#toolbar-filter-btn > span {
  display: flex;
  align-items: center;
  height: 100%;
  padding-left: 1.5rem;
}

#add-btn {
  z-index: 3;
  width: 75px;
  height: 75px;
  box-shadow:  2px 2px 12px rgba(0, 0, 0, 0.4),
              -2px -2px 12px rgba(0,0,0,0.4);
}

#add-btn > i {
  font-size: var(--fs-700);
}

#toolbar-sort-btn {
  width: 120px;
  height: 45px;
  margin-left: -3rem;
  z-index: 2;
  border-radius: 20px;
}

#toolbar-sort-btn > span {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  height: 100%;
  padding-right: 1.5rem;
}

/* INDIVIDUAL ENTRY CONTAINER ////////////*/

.entry-container {
  flex-direction: column;
  max-width: 80vw;
  min-width: 40vw;
  border-radius: 20px;
  margin: 0;
  padding: 1rem;
}

.entry-customer {
}

.entry-contacts {
}

.description-wrapper {
}

.description {
  min-height: 100px;
  flex: 1;
  resize: vertical;
  border-radius: 10px;
  white-space: pre-wrap; /* allows displaying content with line breaks*/ 
  padding: 0.5rem 1.2rem;
  margin: 1rem 0 0.5rem 0;
}

.tag-container {
  border-radius: 50px;
  padding: 0.5rem 1rem;
  margin: 0.5rem 0;
  --gap: 0.5rem;
}

.tag {
  background-color: hsl(var(--clr-light) / 0.7);
  color: hsl(var(--clr-dark));
  font-size: var(--fs-200);
  padding: 0.3rem 1rem 0.3rem 0.6rem;
  border: none;
  border-radius: 20px;
}

.entry-btn-container {
  --gap: 1.5rem;
  margin: 1.5rem 0 0 0;
  padding: 0 2rem;
}

.round-btn {
  width: 45px;
  height: 45px;
  border-radius: 100%;
  border: none;
  color: hsl(var(--clr-light));
  font-size: 1.2rem;
}



/* FORM /////////////////////////// */

.modal {
  position: fixed;
  background: rgba(0, 0, 0, 0.6);
  opacity: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  border: none;
  transition: 0.25s ease-in-out;
  overflow-y: scroll;
}

#new-entry-modal {
  z-index: 5;
}

#add-objects-modal {
  z-index: 10;
}

.modal.open {
  opacity: 1;
  pointer-events: all;
}

/* modal container */
.prompt-container {
  flex-direction: column;
  position: absolute;
  max-width: 95%;
  max-height: 95%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: 0.25s ease-in-out;
  border-radius: 14px;
  padding: 0.5rem;
}

.modal-text {
  margin: 1rem 1.5rem 0.5rem 1.5rem;
  text-align: center;
}

.modal-object {
  margin: 0.2rem auto;
}

.form-btn-container {
  justify-content: center;
  align-items: center;
}

.form-btn-container button {
  padding: 0.2rem 0.6rem;
}

/* dropdown suggestions container */
.suggestions {
    flex-direction: column;
    --gap: 0.3rem;
    position: absolute;
    background: rgba(0, 0, 0, 0.8);
    max-height: 150px;
    overflow-y: scroll;
    padding: 1rem;
    border-radius: 1rem;
    border: 2px solid hsl(var(--clr-light) / 0.7);
    transform: translateY(2rem);
}

/* individual suggestion in dropdown box */
.suggestion {
    cursor: pointer;
    color: hsl(var(--clr-light));
}

.suggestion:hover {
    background: hsl(var(--clr-white) / 0.2);
}

input {
    background-color: transparent;
    border: none;
}

input:focus {
    outline-width: 0;
}

button {
  cursor: pointer;
}

button i {
  pointer-events: none;
}

.hl {
  background-color: yellow;
  color: hsl(var(--clr-dark));
}